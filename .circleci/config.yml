version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:12.16.0
        environment:
          CC_TEST_REPORTER_ID: 4c0674ab7fa1efa186ac5998f89136640d924fabcc0b99ed764bd9fc85043b97
    steps:
      - checkout
      - run:
          name: Install codeclimate reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn --pure-lockfile
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ~/.cache/yarn
      - run:
          name: Check lint
          command: yarn eslint
      - run:
          name: Test
          command: yarn test
      - run:
          name: Report test coverage
          # Attempt to submit coverage. Use `|| true` to always succeed even if that submission fails.
          command: ./cc-test-reporter after-build --exit-code $? < coverage/lcov.info || true

  deploy:
    machine: true    
    environment:
      CF_MANIFEST: ./.cloudgov/manifest.yml
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - when:
          condition:
            equal: [ staging, << pipeline.git.branch >> ]
          steps:
            run:
              name: Setup Staging Environment
              command: |
                echo "export CF_USERNAME=$CF_USERNAME_STAGING" >> $BASH_ENV
                echo "export CF_PASSWORD=$CF_PASSWORD_STAGING" >> $BASH_ENV
                echo "export CF_SPACE=staging" >> $BASH_ENV
                echo "export CF_APP=federalist-builder-staging" >> $BASH_ENV
                echo "export CF_VARS_FILE=./.cloudgov/vars/staging.yml" >> $BASH_ENV
      - when:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            run:
              name: Setup Production Environment
              command: |
                echo "export CF_USERNAME=$CF_USERNAME_PRODUCTION" >> $BASH_ENV
                echo "export CF_PASSWORD=$CF_PASSWORD_PRODUCTION" >> $BASH_ENV
                echo "export CF_SPACE=production" >> $BASH_ENV
                echo "export CF_APP=federalist-builder" >> $BASH_ENV
                echo "export CF_VARS_FILE=./.cloudgov/vars/production.yml" >> $BASH_ENV
      - deploy:
          command: ./.cloudgov/deploy.sh


workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - staging
                - master